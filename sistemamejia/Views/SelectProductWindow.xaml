<Window x:Class="Variedades.Views.SelectProductWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Variedades.Views"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Title="SelectProductWindow" Height="550" Width="800">
    <Grid>
        <StackPanel Background="white">
            <DockPanel Background="{StaticResource ColorPrimario}"  Margin="0,0,0,10">
                <TextBlock Name="WindowTitle" Foreground="White" Padding="5,15,15,15" VerticalAlignment="Center" Text="Seleccionar Producto" FontSize="17" ></TextBlock>
            </DockPanel>

            <DockPanel Width="500" HorizontalAlignment="Center">

                <Button BorderBrush="{x:Null}" Height="40px" Width="40px" IsEnabled="False" Margin="65,0,65,0" HorizontalAlignment="Right" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{x:Null}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>

                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ColorBotonesPresionados}"/>
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </Button.Style>


                    <fa5:SvgAwesome Foreground="Black" Margin="0,0,0,0" Width="17px" Icon="Solid_Search" VerticalAlignment="Center" HorizontalAlignment="Left" />

                </Button>

                <TextBox Name="SearchBar" HorizontalAlignment="Left" VerticalAlignment="Center" Width="330px" Margin="0,0,0,0" FontSize="20" TextChanged="SearchBar_TextChanged"></TextBox>
                
            </DockPanel>

            <DockPanel Height="330">

                <DockPanel Margin="10,10,10,10" Height="300" Width="450">
                    <DataGrid MouseDoubleClick="ParentTable_MouseDoubleClick" Name="ParentTable" SelectedItem="{Binding SelectedProductParent, Mode=TwoWay}" Margin="10,10,10,5" Grid.Row="1" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding ProductosParentEspecificacionesCollection}"  VirtualizingPanel.VirtualizationMode="Recycling" HeadersVisibility="Column" AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True"  CanUserReorderColumns="True" CanUserResizeColumns="True"  CanUserResizeRows="True" CanUserSortColumns="True" 
                    AlternatingRowBackground="Gainsboro" VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" IsSynchronizedWithCurrentItem="True">


                        <DataGrid.Columns>

                            <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre, IsAsync=False}" Width="*" ></DataGridTextColumn>
                            <DataGridTextColumn Header="Precio venta" Binding="{Binding Precio_Venta, IsAsync=False}" Width="*" ></DataGridTextColumn>
                            <DataGridTextColumn Header="Tipo Producto" Binding="{Binding Tipo_Producto, IsAsync=True}" Width="*" ></DataGridTextColumn>
                            <DataGridTextColumn Header="Stock" Binding="{Binding NumeroDeEspecificacionesDisponibles, IsAsync=False}" Width="*" ></DataGridTextColumn>


                        </DataGrid.Columns>

                        

                    </DataGrid>

                </DockPanel>

                <DockPanel Name="PanelSeleccion" Margin="10,10,10,10" Height="300" Width="280">
                    <DataGrid MouseDoubleClick="ChildTable_MouseDoubleClick" SelectedItem="{Binding SelectedProductHijo, Mode=TwoWay}" Name="ChildTable" Margin="10,10,10,5" Grid.Row="1" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding ProductosHijosEspecificacionesCollection}"  VirtualizingPanel.VirtualizationMode="Recycling" HeadersVisibility="Column" AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True"  CanUserReorderColumns="True" CanUserResizeColumns="True"  CanUserResizeRows="True" CanUserSortColumns="True" 
                    AlternatingRowBackground="Gainsboro" VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" IsSynchronizedWithCurrentItem="True">


                        <DataGrid.Columns>

                            <DataGridTextColumn Header="Descripcion" Binding="{Binding Descripcion, IsAsync=False}" Width="*" ></DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>

                </DockPanel>

                
            </DockPanel>

            <DockPanel>

                <ComboBox SelectionChanged="TipoSeleccionComboBox_SelectionChanged" Width="180" SelectedIndex="0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" Height="30" Margin="30,0,0,0" Name="TipoSeleccionComboBox">
                    <ComboBoxItem>Seleccion Individual</ComboBoxItem>
                    <ComboBoxItem>Seleccion por Stock</ComboBoxItem>
                </ComboBox>

                <DockPanel Name="SelectStockPanel" Visibility="Hidden" Margin="10,0,10,0">
                    <TextBlock VerticalAlignment="Center" Text="Stock" Width="40px"></TextBlock>
                    <TextBox PreviewTextInput="StockTextBox_PreviewTextInput" VerticalAlignment="Center" FontSize="20" HorizontalAlignment="Left" Width="100" Height="30" Name="StockTextBox" Margin="30,0,0,0"  />
                </DockPanel>

                <DockPanel  Margin="10,0,10,0">
                    <Button Content="Seleccionar Producto"  Click="BtnSelectProduct" Name="SseleccionarBtn" BorderBrush="{x:Null}" Foreground="White" HorizontalAlignment="Center"  VerticalAlignment="Center" Width="130px" Height="40px">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="{StaticResource ColorBotones}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>

                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ColorBotonesPresionados}"/>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </Button.Style>
                    </Button>
                </DockPanel>

               
            </DockPanel>

            

        </StackPanel>
    </Grid>
</Window>
